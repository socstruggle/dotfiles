# Ubuntu 20.04.6 first install
sudo apt update && sudo apt upgrade
sudo dpkg --add-architecture i386 && sudo apt update && sudo apt upgrade 
sudo apt install iproute2 gawk python3 python git vim tmux build-essential testdisk \
gcc make net-tools libncurses5-dev atftpd zlib1g-dev libssl-dev mosh libreoffice \
flex bison libselinux1 gnupg wget git-core diffstat chrpath pixmap unar libtty1 termrec \
socat xterm autoconf libtool tar unzip texinfo gcc-multilib blueman whois nvidia-common \
automake zlib1g:i386 screen pax gzip cpio python3-pip gnome-system-monitor ubuntu-drivers-common \
python3-pexpect xz-utils debianutils iputils-ping rlwrap minicom ranger \
python3-git python3-jinja2 libegl1-mesa libsdl1.2-dev pylint3 nmap tcl-dev evince \
nfs-kernel-server nfs-common nfs4-acl-tools libstdc++6:i386 libgtk2.0-0:i386 \
dpkg-dev:i386 libtinfo5 libncurses5 libfontconfig1:i386 vim-gtk3 gtk2-engines-pixbuf \
libx11-6:i386 libxext6:i386 libxrender1:i386 libsm6:i386 gedit atril tk-dev \
weechat x2goclient keepassxc slim suckless-tools tclsh aria2 libreoffice libreadline-dev \
tasksel graphviz xvfb libncursesw5 lsb xfce4 xfce4-terminal xfce4-goodies \
libfftw3-dev firefox gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-plugins-base \
gstreamer1.0-plugins-base-apps gstreamer1.0-plugins-good gstreamer1.0-pulseaudio \
gstreamer1.0-tools gstreamer1.0-x libgstreamer1.0-0 libgstreamer1.0-dev gstreamer1.0-libav \
gstreamer1.0-nice gstreamer1.0-opencv gstreamer1.0-pipewire gstreamer1.0-plugins-bad \
gstreamer1.0-plugins-rtp gstreamer1.0-plugins-ugly gstreamer1.0-qt5 libspa-lib-0.1-dev \
gstreamer1.0-rtsp gstreamer1.0-vaapi brightnessctl brightness-udev iw wireless-tools \
gstreamer1.0-omx-generic gstreamer1.0-omx-generic-config tftp firewalld nvidia-driver-535-server \
bmon inotify-tools wireshark tcpdump tshark atop htop slurm tcptrack iftop nethogs speedometer \
python3-numpy python3-all python3-cairo gstreamer1.0-python3-plugin-loader \
python3-dbus python3 iptraf ifstat sysstat glances vnstat nload wavemon conky-all \
usbutils pciutils tor isolinux ntfs-3g ntfs-3g-dev x2goserver dpkg-dev libdpkg-dev \
blt libopencv-contrib-dev libopencv-dev libopencv-viz-dev libtcl8.6 libgraphviz-dev \
dpkg-cross cross-config libc6-dev-armel-armhf-cross libc6-dev-armhf-cross \
libc6-dev-arm64-cross libc6-dev-i386 libc6-dev usbview isc-dhcp-server ntp ntpdate \
bridge-utils cpu-checker libvirt-clients libvirt-daemon qemu qemu-kvm virt-manager libpod-* \
libbison-dev libfl-dev ffmpeg mpv vlc iperf3 iperf nautilus elinks links links2 \
unrar glibc-source unrar-free rar kexec-tools makedumpfile crash device-tree-compiler pqiv \
python3-subunit mesa-common-dev tcl-tclreadline tcllib-critcl tcl-expect tcl-expect-dev \
tcl-thread tcl-udp tcl-yajltcl tclcl tclcl-dev cmake checkinstall \
aglfn docutils-common doxygen fonts-font-awesome gdbserver gnuplot-data gnuplot-qt googletest \
libbabeltrace1 libboost-filesystem1.71-dev libboost-program-options1.71-dev \
libboost-program-options1.71.0 libboost-system1.71-dev libboost-system1.71.0 libboost1.71-dev \
libc6-dbg libclang1-10 libjs-modernizr libjs-sphinxdoc libjs-underscore libllvm10 \
libprotobuf-dev libprotoc17 libtinyxml2-6a libwxbase3.0-0v5 libwxgtk3.0-gtk3-0v5 libxapian30 opencl-c-headers \
opencl-clhpp-headers python-babel-localedata python3-alabaster python3-babel \
python3-docutils python3-imagesize python3-packaging python3-roman sphinx-rtd-theme-common *libxcb* \
g++ pkg-config libgl1-mesa-dev libxcb*-dev libfontconfig1-dev libxkbcommon-x11-dev python libgtk-3-dev \
resolvconf bluez bluez-tools bluetooth btscanner rfkill inxi chntpw mokutil linux-generic-hwe-20.04 \
gdebi

sudo apt purge network-manager network-manager-gnome
sudo dpkg-reconfigure dash
sudo dpkg-reconfigure tzdata
git config --global user.name "Cem Kayhan"
git config --global user.email cemkayhan42@gmail.com

# setup passphrase
chmod 600 ~/id_realserv.passphrase

# Setup firewall
sudo firewall-cmd --permanent --zone=trusted --add-port=69/udp
sudo firewall-cmd --permanent --zone=trusted --add-port=60001/udp
sudo firewall-cmd --permanent --zone=trusted --add-port=8180/udp
sudo firewall-cmd --permanent --zone=trusted --add-port=8554/udp
sudo firewall-cmd --permanent --zone=trusted --add-port=8554/tcp
sudo firewall-cmd --permanent --zone=trusted --add-port=8000/tcp
sudo firewall-cmd --permanent --zone=trusted --add-port=8001/tcp
sudo firewall-cmd --permanent --zone=trusted --add-port=8002/tcp
sudo firewall-cmd --permanent --zone=trusted --add-port=8003/tcp
sudo firewall-cmd --permanent --zone=trusted --add-port=8000/udp
sudo firewall-cmd --permanent --zone=trusted --add-port=8001/udp
sudo firewall-cmd --permanent --zone=trusted --add-port=8002/udp
sudo firewall-cmd --permanent --zone=trusted --add-port=8003/udp
sudo firewall-cmd --permanent --zone=trusted --add-port=5000/udp
sudo firewall-cmd --permanent --zone=trusted --add-port=5001/udp
sudo firewall-cmd --permanent --zone=trusted --add-port=5002/udp
sudo firewall-cmd --permanent --zone=trusted --add-source=10.230.1.0/24
sudo firewall-cmd --permanent --zone=trusted --add-source=12.160.1.0/24
sudo firewall-cmd --permanent --zone=trusted --add-source=10.233.1.0/24
sudo firewall-cmd --permanent --zone=trusted --add-source=10.247.1.0/24
sudo firewall-cmd --permanent --zone=trusted --add-source=224.1.0.0/16
sudo firewall-cmd --permanent --zone=trusted --add-source=192.168.45.0/24
sudo firewall-cmd --permanent --zone=trusted --add-source=192.164.1.100/24
sudo firewall-cmd --permanent --zone=trusted --add-service=ssh
sudo firewall-cmd --permanent --zone=trusted --add-service=tftp
sudo firewall-cmd --permanent --zone=trusted --add-service=nfs
sudo firewall-cmd --reload

# Setup tftp
sudo sed -e 's/^USE_INETD=true/USE_INETD=false/g' -i /etc/default/atftpd
sudo sed -e 's/\/srv\/tftp/\/var\/lib\/tftpboot/g' -i /etc/default/atftpd
sudo sed -e 's/^tftp/#tftp/g' -i /etc/inetd.conf
sudo mkdir -p /var/lib/tftpboot
sudo chown -R nobody:nogroup /var/lib/tftpboot
sudo chmod -R 777 /var/lib/tftpboot
sudo systemctl enable atftpd

# Setup disks
sudo mkdir /mnt/Toshiba1
sudo mkdir /mnt/Toshiba2
echo 'UUID=96BEC022BEBFF8B7 /mnt/Toshiba1 ntfs-3g permissions,locale=en_US.utf8 0 0'|sudo tee -a /etc/fstab
echo 'UUID=6CDA5EB7DA5E7CF0 /mnt/Toshiba2 ntfs-3g permissions,locale=en_US.utf8 0 0'|sudo tee -a /etc/fstab
sudo mount -a

# Create users & groups
sudo groupadd xilinx
sudo adduser aalniak
sudo adduser aberke
sudo adduser hguler
sudo adduser boral
sudo adduser dgorken
sudo usermod -aG xilinx ckayhan
sudo usermod -aG xilinx aalniak
sudo usermod -aG xilinx aberke
sudo usermod -aG xilinx hguler
sudo usermod -aG xilinx boral
sudo usermod -aG xilinx dgorken

sudo usermod -aG dialout ckayhan
sudo usermod -aG dialout alniak
sudo usermod -aG dialout aberke
sudo usermod -aG dialout hberke
sudo usermod -aG dialout boral
sudo usermod -aG dialout dgorken

sudo usermod -aG libvirt ckayhan
sudo usermod -aG kvm ckayhan

# Change sudo for ckayhan
sudo visudo
add line echo 'Defaults:ckayhan !authenticate'

# Vitis 2022.2 installation
sudo mkdir -p /opt/Vitis
sudo chown -R ckayhan:ckayhan /opt/Vitis
./xsetup -b ConfigGen
./xsetup --agree XilinxEULA,3rdPartyEULA --batch Install --config ~/.Xilinx/install_config.txt
sudo chown -R root:xilinx /opt/Vitis
sudo chmod -R 755 /opt/Vitis

# Petalinux 2022.2 installation (begin)
sudo mkdir -p /mnt/Elements3/opt/Petalinux/2022.2
sudo chown -R ckayhan:ckayhan /mnt/Elements3/opt/Petalinux/2022.2
~/petalinux*.run -d /mnt/Elements3/opt/Petalinux/2022.2
sudo chown -R root:xilinx /mnt/Elements3/opt/Petalinux
sudo chmod -R 755 /mnt/Elements3/opt/Petalinux

sudo mkdir -p /mnt/Toshiba1/Petalinux/2022.2
sudo chown -R ckayhan:ckayhan /mnt/Toshiba1/Petalinux/2022.2
~/petalinux*.run -d /mnt/Toshiba1/Petalinux/2022.2
sudo chown -R root:xilinx /mnt/Toshiba1/Petalinux
sudo chmod -R 755 /mnt/Toshiba1/Petalinux

sudo mkdir -p /mnt/Toshiba2/Petalinux/2022.2
sudo chown -R ckayhan:ckayhan /mnt/Toshiba2/Petalinux/2022.2
~/petalinux*.run -d /mnt/Toshiba2/Petalinux/2022.2
sudo chown -R root:xilinx /mnt/Toshiba2/Petalinux
sudo chmod -R 755 /mnt/Toshiba2/Petalinux
# Petalinux 2022.2 installation (end)

# Vivado 2018.3 installation
./xsetup -b ConfigGen
sudo ./xsetup --agree XilinxEULA,3rdPartyEULA,WebTalkTerms --batch Install --config ~/.Xilinx/install_config.txt
sudo chown -R root:xilinx /opt/Vitis
sudo chmod -R 755 /opt/Vitis

# Network setup
sudo cp -f ~/netplan /etc/netplan/00-installer-config.yaml
sudo netplan apply

# Setup /mnt/nfsroot
sudo mkdir -p /mnt/nfsroot
sudo chown -R nobody:nogroup /mnt/nfsroot
echo '/mnt/nfsroot 10.233.1.0/24(rw,sync,no_root_squash,no_subtree_check)'|sudo tee -a /etc/exports
sudo systemctl restart nfs-kernel-server

# Setup /mnt/nfsshareVio
sudo mount -t nfs 10.230.1.17:/mnt/nfsshare /mnt/nfsshareVio

# Setup /mnt/Elements2
echo '/mnt/Elements2 10.230.1.17/24(rw,sync,no_root_squash,no_subtree_check)'|sudo tee -a /etc/exports
sudo exportfs -ra

# dummy notes
sudo sysctl -w net.core.rmem_max=100000000
sudo sysctl -w net.core.wmem_max=100000000

# Setup /etc/udev rules
echo 'KERNEL=="ttyUSB[0-9]*", SUBSYSTEM=="tty", SUBSYSTEMS=="usb", ATTRS{idVendor}=="067b", ATTRS{idProduct}=="2303", ENV{USB_HUB_TYPE}="067b:2303"'|sudo tee -a /etc/udev/rules.d/99-gpp4323-rs232.rules
echo 'ENV{USB_HUB_TYPE}=="067b:2303", KERNEL=="ttyUSB[0-9]*", SUBSYSTEM=="tty", KERNELS=="1-7.2:1.0", SYMLINK+="gpp4323", GROUP="dialout"'|sudo tee -a /etc/udev/rules.d/99-gpp4323-rs232.rules
echo 'KERNEL=="ttyUSB[0-9]*", SUBSYSTEM=="tty", SUBSYSTEMS=="usb", ATTRS{idVendor}=="1a40", ATTRS{idProduct}=="0101", ENV{USB_HUB_TYPE}="1a40:0101"'|sudo tee -a /etc/udev/rules.d/99-kriaUart-rs232.rules
echo 'ENV{USB_HUB_TYPE}=="1a40:0101", KERNEL=="ttyUSB[0-9]*", SUBSYSTEM=="tty", KERNELS=="1-8.2:1.1", SYMLINK+="kriaUart", GROUP="dialout", MODE="0666"'|sudo tee -a /etc/udev/rules.d/99-kriaUart-rs232.rules
echo 'KERNEL=="ttyUSB[0-9]*", SUBSYSTEM=="tty", SUBSYSTEMS=="usb", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6001", ENV{USB_HUB_TYPE}="0403:6001"'|sudo tee -a /etc/udev/rules.d/99-ulaq5000-rs232.rules
echo 'ENV{USB_HUB_TYPE}=="0403:6001", KERNEL=="ttyUSB[0-9]*", SUBSYSTEM=="tty", KERNELS=="1-7.4:1.0", SYMLINK+="ulaq5000", GROUP="dialout", MODE="0666"'|sudo tee -a /etc/udev/rules.d/99-ulaq5000-rs232.rules

# temp
hw_server -stcp:10.230.1.18:5125 -p5000 -e "set jtag-port-filter Digilent/JTAG-HS2/210249A73CF5"
mwr  0xff5e0200 0x0100
petalinux-boot --jtag --u-boot --fpga --bitstream images/linux/system.bit --pmufw --hw_server-url TCP:10.230.1.18:5125

# petalinux notes 1
to compile kernel modules on the running board you have to first cd to 'usr/src/kernel' directory and run 'make scripts prepare' command

# how to compile opencv4.4.0 on Ubuntu-20.04 for Vitis HLS 2022.2                                                                                                                                   
md myopencv && cd myopencv
git clone https://github.com/opencv/opencv --branch 4.4.0 source && git clone https://github.com/opencv/opencv_contrib --branch 4.4.0 source_contrib
cd source && md build && cd build
LIBRARY_PATH=/usr/lib/x86_64-linux-gnu cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=/usr/local/opencv4.4.0 \
-DWITH_V4L=ON -DOPENCV_EXTRA_MODULES_PATH=/home/ckayhan/myopencv/source_contrib/modules -DBUILD_TESTS=OFF -DBUILD_ZLIB=ON \
-DBUILD_JPEG=ON -DWITH_JPEG=ON -DWITH_PNG=ON -DBUILD_EXAMPLES=OFF -DINSTALL_C_EXAMPLES=OFF -DINSTALL_PYTHON_EXAMPLES=OFF \
-DWITH_OPENEXR=OFF -DBUILD_OPENEXR=OFF -DCMAKE_CXX_COMPILER=/opt/Vitis/Vitis_HLS/2022.2/tps/lnx64/gcc-6.2.0/bin/g++ ..
LIBRARY_PATH=/usr/lib/x86_64-linux-gnu make all -j10
sudo LIBRARY_PATH=/usr/lib/x86_64-linux-gnu make install

# Create /mnt directories
sudo mkdir /mnt/Elements1
sudo mkdir /mnt/Elements2
sudo mkdir /mnt/Toshiba1
sudo mkdir /mnt/Toshiba2

# netplan config
# This is the network config written by 'subiquity'
network:
  bridges:
    br0:
      dhcp4: false
      dhcp6: false
      gateway4: 10.230.1.1
      addresses: [10.230.1.66/24]
      nameservers:
              #addresses: [10.230.1.238]
              addresses: [8.8.8.8]
              addresses: [8.8.4.4]
      interfaces: [enp3s0]
  ethernets:
    enp3s0:
      dhcp4: false
      dhcp6: false
      critical: true
  version: 2

# how to install google chrome
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo gdebi google-chrome-stable_current_amd64.deb

# "su" with error "X11 connection rejected because of wrong authentication"
sudo xauth add $(xauth list | grep "unix$(echo $DISPLAY | cut -c10-12)")

# copy vim config to root
sudo cp -f ~/.vimrc /root/
sudo cp -rf ~/.vim /root/

# 
sudo mkdir /GIT
cd /GIT
sudo chown -R ckayhan:git /GIT 
mkdir ASEYE_FW
sudo chmod -R 755 /GIT
